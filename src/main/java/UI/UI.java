/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package UI;

import Backend.Checks;
import java.sql.SQLOutput;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.LocalTime;
import javax.swing.JOptionPane;

/**
 *
 * @author darrenl
 */
public class UI extends javax.swing.JFrame {
    
    public int maxPrice = 9999999;

    /**
     * Creates new form UI
     */
    public UI() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jComboBox3 = new javax.swing.JComboBox<>();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel13 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        paymentDetailsPanel = new javax.swing.JPanel();
        cardDetailsHeader = new javax.swing.JLabel();
        experationLabel = new javax.swing.JLabel();
        dayInputSpinner = new javax.swing.JSpinner();
        yearInputField = new javax.swing.JTextField();
        CVVLabel = new javax.swing.JLabel();
        cardNumberLabel = new javax.swing.JLabel();
        cardNumberInputField = new javax.swing.JTextField();
        CVVInputField = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        postalCodeLabel = new javax.swing.JLabel();
        priceOfItemInputField = new javax.swing.JTextField();
        purchaseButton = new javax.swing.JButton();
        productLabelHeader = new javax.swing.JLabel();
        ISBNLabel = new javax.swing.JLabel();
        ISBNInputField = new javax.swing.JTextField();
        ISBNErrorDisplay = new javax.swing.JLabel();
        expirationErrorDisplayLabel = new javax.swing.JLabel();
        cardNumberErrorDisplayLabel = new javax.swing.JLabel();
        priceErrorDisplay = new javax.swing.JLabel();
        emailDisplayLabel = new javax.swing.JLabel();
        emailInputTextField = new javax.swing.JTextField();
        emailAddressErrorDisplau = new javax.swing.JLabel();
        emailReceiptLable = new javax.swing.JLabel();
        recieptCheckBox = new javax.swing.JCheckBox();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        jComboBox3.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel13.setText("jLabel13");

        jLabel18.setText("jLabel18");

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        paymentDetailsPanel.setBackground(new java.awt.Color(0, 0, 0));

        cardDetailsHeader.setForeground(new java.awt.Color(255, 255, 255));
        cardDetailsHeader.setText("------------------------------ Card Details -----------------------------");

        experationLabel.setForeground(new java.awt.Color(255, 255, 255));
        experationLabel.setText("Expiration Date:");

        dayInputSpinner.setModel(new javax.swing.SpinnerNumberModel(1, 1, 12, 1));

        yearInputField.setText("----");
        yearInputField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                yearInputFieldFocusGained(evt);
            }
        });
        yearInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                yearInputFieldKeyTyped(evt);
            }
        });

        CVVLabel.setForeground(new java.awt.Color(255, 255, 255));
        CVVLabel.setText("CVV");

        cardNumberLabel.setForeground(new java.awt.Color(255, 255, 255));
        cardNumberLabel.setText("Card Number:");

        cardNumberInputField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cardNumberInputFieldActionPerformed(evt);
            }
        });
        cardNumberInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cardNumberInputFieldKeyTyped(evt);
            }
        });

        CVVInputField.setText("---");
        CVVInputField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                CVVInputFieldFocusGained(evt);
            }
        });
        CVVInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                CVVInputFieldKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                CVVInputFieldKeyTyped(evt);
            }
        });

        postalCodeLabel.setForeground(new java.awt.Color(255, 255, 255));
        postalCodeLabel.setText("Price of Item:");

        priceOfItemInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                priceOfItemInputFieldKeyTyped(evt);
            }
        });

        purchaseButton.setText("Purchase");
        purchaseButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                purchaseButtonActionPerformed(evt);
            }
        });

        productLabelHeader.setForeground(new java.awt.Color(255, 255, 255));
        productLabelHeader.setText("                           --------------------------- Product Details -------------------------");

        ISBNLabel.setForeground(new java.awt.Color(255, 255, 255));
        ISBNLabel.setText("ISBN:");

        ISBNInputField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                ISBNInputFieldKeyTyped(evt);
            }
        });

        ISBNErrorDisplay.setForeground(new java.awt.Color(255, 0, 0));
        ISBNErrorDisplay.setText(" ");

        expirationErrorDisplayLabel.setForeground(new java.awt.Color(255, 0, 0));
        expirationErrorDisplayLabel.setText(" ");

        cardNumberErrorDisplayLabel.setForeground(new java.awt.Color(255, 0, 0));
        cardNumberErrorDisplayLabel.setText(" ");

        priceErrorDisplay.setForeground(new java.awt.Color(255, 0, 0));
        priceErrorDisplay.setText(" ");

        emailDisplayLabel.setForeground(new java.awt.Color(255, 255, 255));
        emailDisplayLabel.setText("Email:");

        emailInputTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                emailInputTextFieldKeyPressed(evt);
            }
        });

        emailAddressErrorDisplau.setForeground(new java.awt.Color(255, 0, 0));
        emailAddressErrorDisplau.setText(" ");

        emailReceiptLable.setForeground(new java.awt.Color(255, 255, 255));
        emailReceiptLable.setText("Email Recipt:");

        recieptCheckBox.setText("Reciept");

        javax.swing.GroupLayout paymentDetailsPanelLayout = new javax.swing.GroupLayout(paymentDetailsPanel);
        paymentDetailsPanel.setLayout(paymentDetailsPanelLayout);
        paymentDetailsPanelLayout.setHorizontalGroup(
            paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(purchaseButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(369, 369, 369)
                                .addComponent(jLabel16, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(experationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(expirationErrorDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 396, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CVVLabel)
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(cardNumberLabel)
                                .addGap(27, 27, 27)
                                .addComponent(cardNumberInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(dayInputSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(yearInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(CVVInputField, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(emailDisplayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                        .addGap(18, 18, Short.MAX_VALUE)
                                        .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(emailAddressErrorDisplau, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addComponent(cardNumberErrorDisplayLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(emailInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(ISBNLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(ISBNErrorDisplay, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(ISBNInputField)))
                            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(postalCodeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(priceErrorDisplay)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(priceOfItemInputField))))
                        .addContainerGap())
                    .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(emailReceiptLable, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(recieptCheckBox)
                        .addGap(0, 0, Short.MAX_VALUE))))
            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                .addGap(57, 57, 57)
                .addComponent(productLabelHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 485, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentDetailsPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cardDetailsHeader, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(62, 62, 62))
        );
        paymentDetailsPanelLayout.setVerticalGroup(
            paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentDetailsPanelLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(cardDetailsHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(emailAddressErrorDisplau)
                .addGap(7, 7, 7)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailDisplayLabel)
                    .addComponent(emailInputTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cardNumberErrorDisplayLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cardNumberInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cardNumberLabel))
                .addGap(18, 18, 18)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(experationLabel)
                    .addComponent(CVVLabel)
                    .addComponent(expirationErrorDisplayLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(dayInputSpinner, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(yearInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(CVVInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel16)
                .addGap(26, 26, 26)
                .addComponent(productLabelHeader)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 50, Short.MAX_VALUE)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailReceiptLable)
                    .addComponent(recieptCheckBox))
                .addGap(40, 40, 40)
                .addComponent(priceErrorDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(priceOfItemInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(postalCodeLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ISBNErrorDisplay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(paymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ISBNLabel)
                    .addComponent(ISBNInputField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addComponent(purchaseButton)
                .addGap(15, 15, 15))
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 6, Short.MAX_VALUE)
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 50, Short.MAX_VALUE)
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jLabel1.setText("-------------------------------- BOOK PURCHASING MACHINE 100000 -------------------------");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(paymentDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(17, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(495, 495, 495)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(paymentDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(18, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void emailInputTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailInputTextFieldKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_emailInputTextFieldKeyPressed

    private void purchaseButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_purchaseButtonActionPerformed
        boolean validEmail = false;
        boolean validCreditCardNumber = false;
        boolean validCardExpirationDate = false;
        boolean validPrice = false;
        boolean validISBN = false;
        boolean emailReceipt = false;

        //Checks the email
        if (emailInputTextField.getText().equals("")) {
            emailAddressErrorDisplau.setText("Please enter an email address!");
        } else {
            validEmail = Checks.emailValdity(emailInputTextField.getText());
            if (validEmail == false) {
                emailAddressErrorDisplau.setText("Please enter a valid email!");
            } else {
                validEmail = true;
                emailAddressErrorDisplau.setText("");
            }
        }

        //Checks the cardNumber!
        if (cardNumberInputField.equals("")) {
            cardNumberErrorDisplayLabel.setText("Please enter a card Number!");
        } else if (cardNumberInputField.getText().length() < 16) {
            cardNumberErrorDisplayLabel.setText("Please enter a 16 Digit valid Credit Card Number");
        } else {
            validCreditCardNumber = true;
            cardNumberErrorDisplayLabel.setText(" ");
        }
        
        if ((CVVInputField.getText().equals("---") || CVVInputField.getText().isEmpty() || CVVInputField.getText().length() < 3) && (yearInputField.getText().equals("----") || yearInputField.getText().isEmpty())) {
            expirationErrorDisplayLabel.setText("Please enter both an experation date and a CVV");
        
            
            
        } else if (CVVInputField.getText().equals("---") || CVVInputField.getText().isEmpty() || CVVInputField.getText().length() < 3) {
            expirationErrorDisplayLabel.setText("Please enter a valid CVV!");
        } else if (yearInputField.getText().equals("----") || yearInputField.getText().isEmpty()) {
            expirationErrorDisplayLabel.setText("Please enter your card's experation date");
        }
        else {
            LocalDateTime cardDate = LocalDateTime.of(Integer.parseInt(yearInputField.getText()), (int) dayInputSpinner.getValue(), 1, 0, 0);
            if (Checks.cardDateValidity(cardDate) == false) {
                expirationErrorDisplayLabel.setText("Please enter valid card details!");
            } else {
                validCardExpirationDate = true;
                expirationErrorDisplayLabel.setText("");
            }
        }
        
        if (ISBNInputField.getText().isEmpty()) {
            ISBNErrorDisplay.setText("Please enter a ISBN ");
            
        } else {
            validISBN = Checks.isValidISBN10(ISBNInputField.getText());
            if (validISBN == false) {
                ISBNErrorDisplay.setText("Please enter a Valid ISBN");
            } else {
                validISBN = true;
                ISBNErrorDisplay.setText(" ");
            }
        }
        
        if (priceOfItemInputField.getText().isEmpty()) {
            priceErrorDisplay.setText("Please enter a price!");
        } else {
            validPrice = Checks.priceRangeCheck(maxPrice, priceOfItemInputField.getText());
            if (validPrice == false) {
                priceErrorDisplay.setText("Please enter a valid price!");
            } else {
                validPrice = true;
                priceErrorDisplay.setText("");
            }
            
        }
        //Does a check to see if the box is checked
        if (recieptCheckBox.isSelected() == true && validEmail == true && validCreditCardNumber == true && validCardExpirationDate == true && validPrice == true && validISBN == true) {
            Checks.printReciept(Integer.parseInt(priceOfItemInputField.getText()), Integer.parseInt(ISBNInputField.getText()));
            System.out.println("================= DATA =======================\nEmail: " + emailInputTextField.getText() + "\nCard Number: " + cardNumberInputField.getText() + "\nExperation Date (MM/YYYY): " + dayInputSpinner.getValue() + "/" + yearInputField.getText() + "\nEmail Receipt: " + emailReceipt + "\nPrice of Item: R" + priceOfItemInputField.getText() + "\nISBN: " + ISBNInputField.getText());
            JOptionPane.showMessageDialog(null, "YOUR DATA IS VALID!");
            emailReceipt = true;
        }
        
        if (validEmail == true && validCreditCardNumber == true && validCardExpirationDate == true && validPrice == true && validISBN == true) {
            System.out.println("================= DATA =======================\nEmail: " + emailInputTextField.getText() + "\nCard Number: " + cardNumberInputField.getText() + "\nExperation Date (MM/YYYY): " + dayInputSpinner.getValue() + "/" + yearInputField.getText() + "\nEmail Receipt: " + emailReceipt + "\nPrice of Item: R" + priceOfItemInputField.getText() + "\nISBN: " + ISBNInputField.getText());
            JOptionPane.showMessageDialog(null, "YOUR DATA IS VALID!");
        }

    }//GEN-LAST:event_purchaseButtonActionPerformed

    private void CVVInputFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CVVInputFieldKeyPressed
        int maxLength = 3;
        if (yearInputField.getText().length() >= maxLength) {
            evt.consume();
        }
    }//GEN-LAST:event_CVVInputFieldKeyPressed

    private void CVVInputFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_CVVInputFieldFocusGained
        CVVInputField.setText("");
    }//GEN-LAST:event_CVVInputFieldFocusGained

    private void cardNumberInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cardNumberInputFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
            cardNumberErrorDisplayLabel.setText("Please ensure you only enter numbers!");
            
        }
        int maxLenght = 16;
        if (cardNumberInputField.getText().length() >= maxLenght) {
            evt.consume();
        }
    }//GEN-LAST:event_cardNumberInputFieldKeyTyped

    private void cardNumberInputFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cardNumberInputFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cardNumberInputFieldActionPerformed

    private void yearInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_yearInputFieldKeyTyped
        int maxLength = 4; // Maximum number of characters allowed
        if (yearInputField.getText().length() >= maxLength) {
            evt.consume(); // Consume the key event to prevent further input
        }
        
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
            expirationErrorDisplayLabel.setText("Please ensure you only enter numbers in your experation date!");
            
        }
    }//GEN-LAST:event_yearInputFieldKeyTyped

    private void yearInputFieldFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_yearInputFieldFocusGained
        yearInputField.setText("");
    }//GEN-LAST:event_yearInputFieldFocusGained

    private void priceOfItemInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_priceOfItemInputFieldKeyTyped
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
            priceErrorDisplay.setText("Please ensure you only enter numbers!");
            priceErrorDisplay.setVisible(true);
            
        }
        
        int maxLength = (maxPrice + "").length();
        if (priceOfItemInputField.getText().length() >= maxLength) {
            evt.consume();
        }
    }//GEN-LAST:event_priceOfItemInputFieldKeyTyped

    private void ISBNInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ISBNInputFieldKeyTyped
        char c = evt.getKeyChar();
        int maxLength = 10;
        if (!Character.isDigit(c) || ISBNInputField.getText().length() >= maxLength) {
            evt.consume();
//            ISBNErrorDisplay.setText("Please ensure you only enter numbers!");
//            ISBNErrorDisplay.setVisible(true);
//
        }
    }//GEN-LAST:event_ISBNInputFieldKeyTyped

    private void CVVInputFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_CVVInputFieldKeyTyped
        int maxLength = 3;
        if (CVVInputField.getText().length() >= maxLength) {
            evt.consume();
        }
        
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume();
            expirationErrorDisplayLabel.setText("Please ensure you only enter numbers in your CVV!");
            
        }
    }//GEN-LAST:event_CVVInputFieldKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        System.out.println("STARTED");
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                System.out.println(info.getName());
                if ("Metal".equals(info.getName())) {
                    System.out.println("CHOSEN!");
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(UI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField CVVInputField;
    private javax.swing.JLabel CVVLabel;
    private javax.swing.JLabel ISBNErrorDisplay;
    private javax.swing.JTextField ISBNInputField;
    private javax.swing.JLabel ISBNLabel;
    private javax.swing.JLabel cardDetailsHeader;
    private javax.swing.JLabel cardNumberErrorDisplayLabel;
    private javax.swing.JTextField cardNumberInputField;
    private javax.swing.JLabel cardNumberLabel;
    private javax.swing.JSpinner dayInputSpinner;
    private javax.swing.JLabel emailAddressErrorDisplau;
    private javax.swing.JLabel emailDisplayLabel;
    private javax.swing.JTextField emailInputTextField;
    private javax.swing.JLabel emailReceiptLable;
    private javax.swing.JLabel experationLabel;
    private javax.swing.JLabel expirationErrorDisplayLabel;
    private javax.swing.JComboBox<String> jComboBox3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JPanel paymentDetailsPanel;
    private javax.swing.JLabel postalCodeLabel;
    private javax.swing.JLabel priceErrorDisplay;
    private javax.swing.JTextField priceOfItemInputField;
    private javax.swing.JLabel productLabelHeader;
    private javax.swing.JButton purchaseButton;
    private javax.swing.JCheckBox recieptCheckBox;
    private javax.swing.JTextField yearInputField;
    // End of variables declaration//GEN-END:variables
}
